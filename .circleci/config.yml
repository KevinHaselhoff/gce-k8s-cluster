version: 2
jobs:
  create-cluster:
    docker:
      - image: google/cloud-sdk:alpine

    steps:
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json

      - run:
          name: Create cluster
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet beta container clusters create ${GOOGLE_CLUSTER_NAME} \
            --region ${GOOGLE_COMPUTE_ZONE} \
            --username "kevin.haselhoff" \
            --disk-size "10" \
            --cluster-version "1.10.4-gke.2" \
            --machine-type "f1-micro" \
            --image-type "COS" \
            --disk-type "pd-standard" \
            --preemptible \
            --service-account "circleci@${GOOGLE_PROJECT_ID}.iam.gserviceaccount.com" \
            --num-nodes "3" \
            --enable-stackdriver-kubernetes \
            --network "default" \
            --subnetwork "default" \
            --enable-autoscaling \
            --min-nodes "3" \
            --max-nodes "5" \
            --enable-autoupgrade --enable-autorepair \
            --addons HorizontalPodAutoscaling


  install-helm:
    docker:
      - image: google/cloud-sdk

    steps:
      - run:
          name: Store Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json

      - run:
          name: Create kubeconfig
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      
      - run:
          name: Install helm
          command: |
            curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
            chmod 700 get_helm.sh
            ./get_helm.sh

      - run:
          name: Init helm
          command: |
            kubectl --namespace kube-system create serviceaccount tiller
            kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
            helm init --service-account tiller --wait


  install-cluster-tools:
      docker:
        - image: google/cloud-sdk

      steps:
        - checkout:
            path: ~/cluster-tools
        
        - run:
            name: Store Service Account
            command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json

        - run:
            name: Create kubeconfig
            command: |
              gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
              gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
        
        - run:
            name: Install helm
            command: |
              curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh
              chmod 700 get_helm.sh
              ./get_helm.sh

        - run:
            name: Install nginx-ingress
            command: |
              helm upgrade --install --namespace kube-system nginx-ingress stable/nginx-ingress \
              --set rbac.create="True"

        - run:
            name: Install external-dns
            command: |
              cd ~/cluster-tools
              helm upgrade --install --namespace kube-system ./external-dns \
              --set env.doToken="${doToken}"


workflows:
  version: 2
  deploy-cluster:
    jobs:
      - create-cluster:
          context: GKE
      - install-helm:
          requires:
            - create-cluster
          context: GKE
      - install-cluster-tools:
          requires:
            - install-helm
          context: GKE